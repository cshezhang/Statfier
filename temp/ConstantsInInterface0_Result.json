{
  "formatVersion": 0,
  "pmdVersion": "6.41.0",
  "timestamp": "2022-01-08T14:23:44.890+08:00",
  "files": [
    {
      "filename": "C:\\Users\\wanna\\projects\\SAMutator\\seeds\\PMD_Seeds\\bestpractices_ConstantsInInterface\\ConstantsInInterface0.java",
      "violations": [
        {
          "beginline": 3,
          "begincolumn": 25,
          "endline": 3,
          "endcolumn": 39,
          "description": "Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.",
          "rule": "ConstantsInInterface",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "https://pmd.github.io/pmd-6.41.0/pmd_rules_java_bestpractices.html#constantsininterface"
        },
        {
          "beginline": 4,
          "begincolumn": 18,
          "endline": 4,
          "endcolumn": 32,
          "description": "Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.",
          "rule": "ConstantsInInterface",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "https://pmd.github.io/pmd-6.41.0/pmd_rules_java_bestpractices.html#constantsininterface"
        },
        {
          "beginline": 5,
          "begincolumn": 11,
          "endline": 5,
          "endcolumn": 25,
          "description": "Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.",
          "rule": "ConstantsInInterface",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "https://pmd.github.io/pmd-6.41.0/pmd_rules_java_bestpractices.html#constantsininterface"
        },
        {
          "beginline": 6,
          "begincolumn": 5,
          "endline": 6,
          "endcolumn": 19,
          "description": "Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.",
          "rule": "ConstantsInInterface",
          "ruleset": "Best Practices",
          "priority": 3,
          "externalInfoUrl": "https://pmd.github.io/pmd-6.41.0/pmd_rules_java_bestpractices.html#constantsininterface"
        }
      ]
    }
  ],
  "suppressedViolations": [],
  "processingErrors": [],
  "configurationErrors": []
}