[{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `Constructors()` writes to field `racerd.Constructors.staticField` outside of synchronization.\n Reporting because the current class is annotated `@ThreadSafe`, so we assume that this method can run in parallel with other non-private methods in the class (including itself).","severity":"WARNING","line":20,"column":-1,"procedure":"codetoanalyze.java.racerd.Constructors.<init>()","procedure_start_line":0,"file":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","bug_trace":[{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","line_number":20,"column_number":-1,"description":"access to `racerd.Constructors.staticField`"}],"key":"Constructors.java|<init>|THREAD_SAFETY_VIOLATION","hash":"7b6218a7c18b9e7b2a863bfb4a7c16ca","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGQAAAAEAAAAIQAAABagsFQA/5EJWy9ob21lL3Zhbmd1YXJkL3Byb2plY3RzL1NBTXV0YXRvci9zcmMvdGVzdC9qYXZhL2NvZGV0b2FuYWx5emUvamF2YS9yYWNlcmQvQ29uc3RydWN0b3JzLmphdmFA"},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `Constructors(...)` writes to field `o.field` outside of synchronization.\n Reporting because the current class is annotated `@ThreadSafe`, so we assume that this method can run in parallel with other non-private methods in the class (including itself).","severity":"WARNING","line":28,"column":-1,"procedure":"codetoanalyze.java.racerd.Constructors.<init>(codetoanalyze.java.racerd.Constructors)","procedure_start_line":0,"file":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","bug_trace":[{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","line_number":28,"column_number":-1,"description":"access to `o.field`"}],"key":"Constructors.java|<init>|THREAD_SAFETY_VIOLATION","hash":"70d219929308d4fe79a216039b3358e6","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGQAAAAEAAAAIQAAABagsFwA/5EJWy9ob21lL3Zhbmd1YXJkL3Byb2plY3RzL1NBTXV0YXRvci9zcmMvdGVzdC9qYXZhL2NvZGV0b2FuYWx5emUvamF2YS9yYWNlcmQvQ29uc3RydWN0b3JzLmphdmFA"},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `Constructors.FP_singleton2Ok()` reads without synchronization from `racerd.Constructors.sSingleton1`. Potentially races with write in method `Constructors.FP_singleton2Ok()`.\n Reporting because the current class is annotated `@ThreadSafe`, so we assume that this method can run in parallel with other non-private methods in the class (including itself).","severity":"WARNING","line":52,"column":-1,"procedure":"codetoanalyze.java.racerd.Constructors.FP_singleton2Ok():codetoanalyze.java.racerd.Constructors","procedure_start_line":0,"file":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","bug_trace":[{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","line_number":52,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","line_number":52,"column_number":-1,"description":"access to `racerd.Constructors.sSingleton1`"},{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","line_number":49,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","line_number":49,"column_number":-1,"description":"access to `racerd.Constructors.sSingleton1`"}],"key":"Constructors.java|FP_singleton2Ok|THREAD_SAFETY_VIOLATION","hash":"1017acf4a596ad8187b3d5a873573eca","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGsAAAAGAAAAKAAAAB2gsHQA/5EJWy9ob21lL3Zhbmd1YXJkL3Byb2plY3RzL1NBTXV0YXRvci9zcmMvdGVzdC9qYXZhL2NvZGV0b2FuYWx5emUvamF2YS9yYWNlcmQvQ29uc3RydWN0b3JzLmphdmGgsHEA/wQEQA=="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `Constructors.singleton1Bad()` indirectly writes to field `racerd.Constructors.staticField` outside of synchronization.\n Reporting because the current class is annotated `@ThreadSafe`, so we assume that this method can run in parallel with other non-private methods in the class (including itself).","severity":"WARNING","line":57,"column":-1,"procedure":"codetoanalyze.java.racerd.Constructors.singleton1Bad():codetoanalyze.java.racerd.Constructors","procedure_start_line":0,"file":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","bug_trace":[{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","line_number":57,"column_number":-1,"description":"call to Constructors.<init>(Object)"},{"level":1,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","line_number":24,"column_number":-1,"description":"access to `racerd.Constructors.staticField`"}],"key":"Constructors.java|singleton1Bad|THREAD_SAFETY_VIOLATION","hash":"8ad6cef143414fb00f3156752920b6c5","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGQAAAAEAAAAIQAAABagsFgA/5EJWy9ob21lL3Zhbmd1YXJkL3Byb2plY3RzL1NBTXV0YXRvci9zcmMvdGVzdC9qYXZhL2NvZGV0b2FuYWx5emUvamF2YS9yYWNlcmQvQ29uc3RydWN0b3JzLmphdmFA"},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `Constructors.singleton2Bad()` reads without synchronization from `racerd.Constructors.sSingleton2`. Potentially races with write in method `Constructors.singleton2Bad()`.\n Reporting because the current class is annotated `@ThreadSafe`, so we assume that this method can run in parallel with other non-private methods in the class (including itself).","severity":"WARNING","line":63,"column":-1,"procedure":"codetoanalyze.java.racerd.Constructors.singleton2Bad():codetoanalyze.java.racerd.Constructors","procedure_start_line":0,"file":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","bug_trace":[{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","line_number":63,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","line_number":63,"column_number":-1,"description":"access to `racerd.Constructors.sSingleton2`"},{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","line_number":64,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","line_number":64,"column_number":-1,"description":"access to `racerd.Constructors.sSingleton2`"}],"key":"Constructors.java|singleton2Bad|THREAD_SAFETY_VIOLATION","hash":"a583020d470642fb91d6f26158a0a1d1","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGwAAAAGAAAAKAAAAB2gsH8A/5EJWy9ob21lL3Zhbmd1YXJkL3Byb2plY3RzL1NBTXV0YXRvci9zcmMvdGVzdC9qYXZhL2NvZGV0b2FuYWx5emUvamF2YS9yYWNlcmQvQ29uc3RydWN0b3JzLmphdmGgsABAAP8EBEA="},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `Constructors.singleton2Bad()` writes to field `racerd.Constructors.sSingleton2` outside of synchronization.\n Reporting because the current class is annotated `@ThreadSafe`, so we assume that this method can run in parallel with other non-private methods in the class (including itself).","severity":"WARNING","line":64,"column":-1,"procedure":"codetoanalyze.java.racerd.Constructors.singleton2Bad():codetoanalyze.java.racerd.Constructors","procedure_start_line":0,"file":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","bug_trace":[{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Constructors.java","line_number":64,"column_number":-1,"description":"access to `racerd.Constructors.sSingleton2`"}],"key":"Constructors.java|singleton2Bad|THREAD_SAFETY_VIOLATION","hash":"b3bc9456b1cc661d9d77de8c74640301","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAGUAAAAEAAAAIQAAABagsABAAP+RCVsvaG9tZS92YW5ndWFyZC9wcm9qZWN0cy9TQU11dGF0b3Ivc3JjL3Rlc3QvamF2YS9jb2RldG9hbmFseXplL2phdmEvcmFjZXJkL0NvbnN0cnVjdG9ycy5qYXZhQA=="}]
