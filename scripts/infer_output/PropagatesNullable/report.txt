#0
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/nullsafe/PropagatesNullable.java:30: error: Null Dereference
  object returned by `propagatesNullable(null)` could be null and is dereferenced at line 30.
  28.         void test(@Nullable String sNullable, String sNonnull) {
  29.           // null constant
  30. >         propagatesNullable(null).length(); // BAD: will be NPE
  31.           nullable(null).length(); // BAD: result might be null
  32.   

#1
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/nullsafe/PropagatesNullable.java:60: error: Null Dereference
  object returned by `cannotCheckBody("")` could be null and is dereferenced at line 60.
  58.   
  59.         void illustrateFalseNegativeAsCannotCheckBody() {
  60. >         cannotCheckBody("").length(); // this is an NPE but is not found
  61.         }
  62.       }

#2
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/nullsafe/PropagatesNullable.java:79: error: Null Dereference
  object returned by `propagatesNullable(sNullable,sNullable)` could be null and is dereferenced at line 79.
  77.         void test(@Nullable String sNullable, String sNonnull) {
  78.           // Both nullable
  79. >         propagatesNullable(sNullable, sNullable).length(); // BAD: result can be null
  80.           nullable(sNullable, sNullable).length(); // BAD: result can be null
  81.   

#3
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/nullsafe/PropagatesNullable.java:105: error: Null Dereference
  object returned by `propagatesNullable(sNonnull,sNullable)` could be null and is dereferenced at line 105.
  103.         void testBothParamsShouldBeNonnull(@Nullable String sNullable, String sNonnull) {
  104.           propagatesNullable(sNullable, sNullable).length(); // BAD: result can be null
  105. >         propagatesNullable(sNonnull, sNullable).length(); // BAD: result can be null
  106.           propagatesNullable(sNullable, sNonnull).length(); // BAD: result can be null
  107.           propagatesNullable(sNonnull, sNonnull).length(); // OK: result can be null

#4
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/nullsafe/PropagatesNullable.java:104: error: Null Dereference
  object returned by `propagatesNullable(sNullable,sNullable)` could be null and is dereferenced at line 104.
  102.   
  103.         void testBothParamsShouldBeNonnull(@Nullable String sNullable, String sNonnull) {
  104. >         propagatesNullable(sNullable, sNullable).length(); // BAD: result can be null
  105.           propagatesNullable(sNonnull, sNullable).length(); // BAD: result can be null
  106.           propagatesNullable(sNullable, sNonnull).length(); // BAD: result can be null

#5
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/nullsafe/PropagatesNullable.java:140: error: Null Dereference
  object returned by `annotatedReturn(s)` could be null and is dereferenced at line 140.
  138.   
  139.         void annotated_dereferencingAfterPassingNullableIsBAD(@Nullable String s) {
  140. >         annotatedReturn(s).toString(); // BAD: nullable dereference
  141.         }
  142.   

#6
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/nullsafe/PropagatesNullable.java:144: error: Null Dereference
  object returned by `notAnnotatedReturn(s)` could be null and is dereferenced at line 144.
  142.   
  143.         void notAnnotated_dereferencingAfterPassingNullableIsBAD(@Nullable String s) {
  144. >         notAnnotatedReturn(s).toString(); // BAD: nullable dereference
  145.         }
  146.   

#7
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/nullsafe/PropagatesNullable.java:150: error: Null Dereference
  object returned by `annotatedReturn(s)` could be null and is dereferenced at line 150.
  148.   
  149.         void annotated_dereferencingAfterPassingNonnullIsOK(String s) {
  150. >         annotatedReturn(s).toString(); // OK: inferred to be non-nullable
  151.         }
  152.   

Found 8 issues
          Issue Type(ISSUED_TYPE_ID): #
  Null Dereference(NULL_DEREFERENCE): 8
