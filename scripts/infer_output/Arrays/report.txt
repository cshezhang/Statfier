#0
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Arrays.java:22: warning: Thread Safety Violation
  Unprotected write. Non-private method `Arrays.arrayParameterWriteBad(...)` writes to field `name1.[_]` outside of synchronization.
 Reporting because the current class is annotated `@ThreadSafe`, so we assume that this method can run in parallel with other non-private methods in the class (including itself).
  20.   
  21.     void arrayParameterWriteBad(int[] name1) {
  22. >     name1[2] = 4;
  23.     }
  24.   

#1
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Arrays.java:43: warning: Thread Safety Violation
  Read/Write race. Non-private method `Arrays.readWriteRaceBad(...)` reads without synchronization from `this.strArr1.[_]`. Potentially races with write in method `Arrays.notReadWriteRace1Ok(...)`.
 Reporting because the current class is annotated `@ThreadSafe`, so we assume that this method can run in parallel with other non-private methods in the class (including itself).
  41.         strArr1[2] = s;
  42.       }
  43. >     return strArr1[2];
  44.     }
  45.   

#2
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Arrays.java:35: warning: Thread Safety Violation
  Unprotected write. Non-private method `Arrays.writeWriteRaceBad(...)` writes to field `this.strArr1.[_]` outside of synchronization.
 Reporting because the current class is annotated `@ThreadSafe`, so we assume that this method can run in parallel with other non-private methods in the class (including itself).
  33.   
  34.     public void writeWriteRaceBad(String s) {
  35. >     strArr1[2] = s;
  36.     }
  37.   

Found 3 issues
                        Issue Type(ISSUED_TYPE_ID): #
  Thread Safety Violation(THREAD_SAFETY_VIOLATION): 3
