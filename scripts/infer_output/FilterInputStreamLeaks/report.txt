#0
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/biabduction/FilterInputStreamLeaks.java:29: error: Resource Leak
  resource of type `java.io.BufferedInputStream` acquired to `bis` by call to `new()` at line 26 is not released after line 29.
**Note**: potential exception at line 27
  27.         bis.read();
  28.         bis.close();
  29. >     } catch (IOException e) {
  30.       }
  31.     }

#1
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/biabduction/FilterInputStreamLeaks.java:55: error: Resource Leak
  resource of type `java.util.zip.CheckedInputStream` acquired to `chis` by call to `new()` at line 52 is not released after line 55.
**Note**: potential exception at line 53
  53.         chis.read();
  54.         chis.close();
  55. >     } catch (IOException e) {
  56.       }
  57.     }

#2
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/biabduction/FilterInputStreamLeaks.java:81: error: Resource Leak
  resource of type `javax.crypto.CipherInputStream` acquired to `cis` by call to `new()` at line 78 is not released after line 81.
**Note**: potential exception at line 79
  79.         cis.skip(8);
  80.         cis.close();
  81. >     } catch (IOException e) {
  82.       }
  83.     }

#3
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/biabduction/FilterInputStreamLeaks.java:108: error: Resource Leak
  resource of type `java.io.DataInputStream` acquired to `dis` by call to `new()` at line 105 is not released after line 108.
**Note**: potential exception at line 106
  106.         dis.read(arr);
  107.         dis.close();
  108. >     } catch (IOException e) {
  109.       }
  110.     }

#4
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/biabduction/FilterInputStreamLeaks.java:134: error: Resource Leak
  resource of type `java.util.zip.DeflaterInputStream` acquired to `dis` by call to `new()` at line 131 is not released after line 134.
**Note**: potential exception at line 132
  132.         dis.read();
  133.         dis.close();
  134. >     } catch (IOException e) {
  135.       }
  136.     }

#5
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/biabduction/FilterInputStreamLeaks.java:157: error: Resource Leak
  resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 156 is not released after line 157.
  155.       try {
  156.         fis = new FileInputStream("file.txt");
  157. >       GZIPInputStream gzipInputStream = new GZIPInputStream(fis);
  158.         gzipInputStream.read();
  159.         gzipInputStream.close();

#6
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/biabduction/FilterInputStreamLeaks.java:160: error: Resource Leak
  resource of type `java.util.zip.GZIPInputStream` acquired to `gzipInputStream` by call to `GZIPInputStream(...)` at line 157 is not released after line 160.
**Note**: potential exception at line 158
  158.         gzipInputStream.read();
  159.         gzipInputStream.close();
  160. >     } catch (IOException e) {
  161.       }
  162.     }

#7
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/biabduction/FilterInputStreamLeaks.java:188: error: Resource Leak
  resource of type `java.security.DigestInputStream` acquired to `dis` by call to `new()` at line 185 is not released after line 188.
**Note**: potential exception at line 186
  186.         dis.read(arr);
  187.         dis.close();
  188. >     } catch (IOException e) {
  189.       }
  190.     }

#8
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/biabduction/FilterInputStreamLeaks.java:214: error: Resource Leak
  resource of type `java.util.zip.InflaterInputStream` acquired to `iis` by call to `new()` at line 211 is not released after line 214.
**Note**: potential exception at line 212
  212.         iis.read();
  213.         iis.close();
  214. >     } catch (IOException e) {
  215.       }
  216.     }

#9
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/biabduction/FilterInputStreamLeaks.java:240: error: Resource Leak
  resource of type `java.io.PushbackInputStream` acquired to `pms` by call to `new()` at line 237 is not released after line 240.
**Note**: potential exception at line 238
  238.         pms.read();
  239.         pms.close();
  240. >     } catch (IOException e) {
  241.       }
  242.     }

Found 10 issues
    Issue Type(ISSUED_TYPE_ID): #
  Resource Leak(RESOURCE_LEAK): 10
