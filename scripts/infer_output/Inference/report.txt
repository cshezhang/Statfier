#0
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Inference.java:64: warning: Thread Safety Violation
  Read/Write race. Non-private method `Inference.read4OutsideSyncBad()` reads without synchronization from `this.mField4`. Potentially races with write in method `Inference.readInsideSyncCoincidentally()`.
 Reporting because another access to the same memory occurs on a background thread, although this access may not.
  62.   
  63.     int read4OutsideSyncBad() {
  64. >     int ret = mField4; // report
  65.       return ret;
  66.     }

#1
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Inference.java:21: warning: Thread Safety Violation
  Read/Write race. Non-private method `Inference.unprotectedRead1Bad()` reads without synchronization from `this.mField1`. Potentially races with write in method `Inference.writeUnderLock1Ok()`.
 Reporting because another access to the same memory occurs on a background thread, although this access may not.
  19.     // should report because there's a write in a method that we think can run on multiple threads
  20.     int unprotectedRead1Bad() {
  21. >     int ret = mField1;
  22.       return ret;
  23.     }

#2
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Inference.java:34: warning: Thread Safety Violation
  Read/Write race. Non-private method `Inference.unprotectedRead2Bad()` reads without synchronization from `this.mField2`. Potentially races with write in method `Inference.writeUnderLock2Ok()`.
 Reporting because another access to the same memory occurs on a background thread, although this access may not.
  32.   
  33.     int unprotectedRead2Bad() {
  34. >     int ret = mField2;
  35.       return ret;
  36.     }

Found 3 issues
                        Issue Type(ISSUED_TYPE_ID): #
  Thread Safety Violation(THREAD_SAFETY_VIOLATION): 3
