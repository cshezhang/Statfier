[{"bug_type":"ARBITRARY_CODE_EXECUTION_UNDER_LOCK","qualifier":"Method `void NotUnderLock.firstAcquisitionBad()` calls `boolean SettableFuture.set(Object)` under a lock; executed code may acquire arbitrary locks leading to potential deadlock.","severity":"ERROR","line":17,"column":-1,"procedure":"codetoanalyze.java.starvation.NotUnderLock.firstAcquisitionBad():void","procedure_start_line":0,"file":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/starvation/NotUnderLock.java","bug_trace":[{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/starvation/NotUnderLock.java","line_number":18,"column_number":-1,"description":"`void NotUnderLock.firstAcquisitionBad()`"},{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/starvation/NotUnderLock.java","line_number":17,"column_number":-1,"description":" locks `this` in `class codetoanalyze.java.starvation.NotUnderLock`"},{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/starvation/NotUnderLock.java","line_number":18,"column_number":-1,"description":"Method call: `void NotUnderLock.callFutureSetOk()`"},{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/starvation/NotUnderLock.java","line_number":14,"column_number":-1,"description":"calls `boolean SettableFuture.set(Object)`"}],"key":"NotUnderLock.java|firstAcquisitionBad|ARBITRARY_CODE_EXECUTION_UNDER_LOCK","hash":"df22ba6925ef325ecacf4f08e8b08b07","bug_type_hum":"Arbitrary Code Execution Under lock"}]
