[{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `SubFld.getG()` indirectly reads without synchronization from `this.g`. Potentially races with write in method `SubFld.setG()`.\n Reporting because the current class is annotated `@ThreadSafe`, so we assume that this method can run in parallel with other non-private methods in the class (including itself).","severity":"WARNING","line":28,"column":-1,"procedure":"codetoanalyze.java.racerd.SubFld.getG():int","procedure_start_line":0,"file":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/SubFld.java","bug_trace":[{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/SubFld.java","line_number":28,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/SubFld.java","line_number":28,"column_number":-1,"description":"call to int SuperFld.getG()"},{"level":1,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/SubFld.java","line_number":24,"column_number":-1,"description":"access to `this.g`"},{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/SubFld.java","line_number":38,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/SubFld.java","line_number":38,"column_number":-1,"description":"access to `this.g`"}],"key":"SubFld.java|getG|THREAD_SAFETY_VIOLATION","hash":"6ee0b3b70027a1a168db9b6c39a9e877","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAALsAAAAIAAAAQAAAACqgsFgA/5EJVS9ob21lL3Zhbmd1YXJkL3Byb2plY3RzL1NBTXV0YXRvci9zcmMvdGVzdC9qYXZhL2NvZGV0b2FuYWx5emUvamF2YS9yYWNlcmQvU3ViRmxkLmphdmGgsGYA/5EJVS9ob21lL3Zhbmd1YXJkL3Byb2plY3RzL1NBTXV0YXRvci9zcmMvdGVzdC9qYXZhL2NvZGV0b2FuYWx5emUvamF2YS9yYWNlcmQvU3ViRmxkLmphdmFA"}]
