[{"bug_type":"INTERFACE_NOT_THREAD_SAFE","qualifier":"Unprotected call to method `UnannotatedInterface.foo()` of un-annotated interface `codetoanalyze.java.racerd.UnannotatedInterface`. Consider annotating the interface with `@ThreadSafe` or adding a lock.\n Reporting because the current class is annotated `@ThreadSafe`.","severity":"WARNING","line":49,"column":-1,"procedure":"codetoanalyze.java.racerd.Dispatch.callUnannotatedInterfaceBad(codetoanalyze.java.racerd.UnannotatedInterface):void","procedure_start_line":0,"file":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Dispatch.java","bug_trace":[{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Dispatch.java","line_number":49,"column_number":-1,"description":"Call to un-annotated interface method void UnannotatedInterface.foo()"}],"key":"Dispatch.java|callUnannotatedInterfaceBad|INTERFACE_NOT_THREAD_SAFE","hash":"5e8b7477b1d966d9285821a4dca9dd44","bug_type_hum":"Interface Not Thread Safe","access":"hJWmvgAAAGAAAAAEAAAAIAAAABWgsHEA/5EJVy9ob21lL3Zhbmd1YXJkL3Byb2plY3RzL1NBTXV0YXRvci9zcmMvdGVzdC9qYXZhL2NvZGV0b2FuYWx5emUvamF2YS9yYWNlcmQvRGlzcGF0Y2guamF2YUA="},{"bug_type":"INTERFACE_NOT_THREAD_SAFE","qualifier":"Unprotected call to method `UnannotatedInterface.foo()` of un-annotated interface `codetoanalyze.java.racerd.UnannotatedInterface`. Consider annotating the interface with `@ThreadSafe` or adding a lock.\n Reporting because the current class is annotated `@ThreadSafe`.","severity":"WARNING","line":53,"column":-1,"procedure":"codetoanalyze.java.racerd.Dispatch.callUnannotatedInterfaceIndirectBad(codetoanalyze.java.racerd.NotThreadSafe,codetoanalyze.java.racerd.UnannotatedInterface):void","procedure_start_line":0,"file":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Dispatch.java","bug_trace":[{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Dispatch.java","line_number":53,"column_number":-1,"description":"call to void NotThreadSafe.notThreadSafeOk(UnannotatedInterface)"},{"level":1,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Dispatch.java","line_number":30,"column_number":-1,"description":"Call to un-annotated interface method void UnannotatedInterface.foo()"}],"key":"Dispatch.java|callUnannotatedInterfaceIndirectBad|INTERFACE_NOT_THREAD_SAFE","hash":"07cbacb1261df7273f46344d65199d52","bug_type_hum":"Interface Not Thread Safe","access":"hJWmvgAAAGAAAAAEAAAAIAAAABWgsF4A/5EJVy9ob21lL3Zhbmd1YXJkL3Byb2plY3RzL1NBTXV0YXRvci9zcmMvdGVzdC9qYXZhL2NvZGV0b2FuYWx5emUvamF2YS9yYWNlcmQvRGlzcGF0Y2guamF2YUA="},{"bug_type":"INTERFACE_NOT_THREAD_SAFE","qualifier":"Unprotected call to method `UnannotatedInterface.foo()` of un-annotated interface `codetoanalyze.java.racerd.UnannotatedInterface`. Consider annotating the interface with `@ThreadSafe` or adding a lock.\n Reporting because the current class is annotated `@ThreadSafe`.","severity":"WARNING","line":126,"column":-1,"procedure":"codetoanalyze.java.racerd.ThreadConfinedField.interfaceCallOnNormalFieldBad():void","procedure_start_line":0,"file":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Dispatch.java","bug_trace":[{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Dispatch.java","line_number":126,"column_number":-1,"description":"Call to un-annotated interface method void UnannotatedInterface.foo()"}],"key":"Dispatch.java|interfaceCallOnNormalFieldBad|INTERFACE_NOT_THREAD_SAFE","hash":"0041add777835a8565fbe37e358d11b3","bug_type_hum":"Interface Not Thread Safe","access":"hJWmvgAAAGEAAAAEAAAAIAAAABWgsAB+AP+RCVcvaG9tZS92YW5ndWFyZC9wcm9qZWN0cy9TQU11dGF0b3Ivc3JjL3Rlc3QvamF2YS9jb2RldG9hbmFseXplL2phdmEvcmFjZXJkL0Rpc3BhdGNoLmphdmFA"},{"bug_type":"INTERFACE_NOT_THREAD_SAFE","qualifier":"Unprotected call to method `UnannotatedInterface.foo()` of un-annotated interface `codetoanalyze.java.racerd.UnannotatedInterface`. Consider annotating the interface with `@ThreadSafe` or adding a lock.\n Reporting because the current class is annotated `@ThreadSafe`.","severity":"WARNING","line":98,"column":-1,"procedure":"codetoanalyze.java.racerd.Dispatch.publicCallBad():void","procedure_start_line":0,"file":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Dispatch.java","bug_trace":[{"level":0,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Dispatch.java","line_number":98,"column_number":-1,"description":"call to void Dispatch.privateCallOk()"},{"level":1,"filename":"/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Dispatch.java","line_number":94,"column_number":-1,"description":"Call to un-annotated interface method void UnannotatedInterface.foo()"}],"key":"Dispatch.java|publicCallBad|INTERFACE_NOT_THREAD_SAFE","hash":"ffdef19defa5f98693ada37fdb2af809","bug_type_hum":"Interface Not Thread Safe","access":"hJWmvgAAAGEAAAAEAAAAIAAAABWgsABeAP+RCVcvaG9tZS92YW5ndWFyZC9wcm9qZWN0cy9TQU11dGF0b3Ivc3JjL3Rlc3QvamF2YS9jb2RldG9hbmFseXplL2phdmEvcmFjZXJkL0Rpc3BhdGNoLmphdmFA"}]
