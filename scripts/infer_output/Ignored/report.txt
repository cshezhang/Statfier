#0
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Ignored.java:29: warning: Thread Safety Violation
  Read/Write race. Non-private method `IgnoredSub.getOk()` reads without synchronization from `this.i`. Potentially races with write in method `IgnoredSub.zeroOk()`.
 Reporting because the current class is annotated `@ThreadSafe`, so we assume that this method can run in parallel with other non-private methods in the class (including itself).
  27.   
  28.     int getOk() {
  29. >     return i;
  30.     }
  31.   }

#1
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Ignored.java:16: warning: Thread Safety Violation
  Unprotected write. Non-private method `Ignored.zeroOk()` indirectly writes to field `this.s.i` outside of synchronization.
 Reporting because the current class is annotated `@ThreadSafe`, so we assume that this method can run in parallel with other non-private methods in the class (including itself).
  14.   
  15.     void zeroOk() {
  16. >     s.zeroOk();
  17.     }
  18.   }

#2
/home/vanguard/projects/SAMutator/src/test/java/codetoanalyze/java/racerd/Ignored.java:25: warning: Thread Safety Violation
  Unprotected write. Non-private method `IgnoredSub.zeroOk()` writes to field `this.i` outside of synchronization.
 Reporting because the current class is annotated `@ThreadSafe`, so we assume that this method can run in parallel with other non-private methods in the class (including itself).
  23.   
  24.     void zeroOk() {
  25. >     i = 0;
  26.     }
  27.   

Found 3 issues
                        Issue Type(ISSUED_TYPE_ID): #
  Thread Safety Violation(THREAD_SAFETY_VIOLATION): 3
