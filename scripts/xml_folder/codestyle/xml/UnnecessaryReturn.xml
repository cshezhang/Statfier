<?xml version="1.0" encoding="UTF-8"?>
<test-data
    xmlns="http://pmd.sourceforge.net/rule-tests"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">

    <test-code>
        <description>bad</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
    void bar() {
        int y = 3;
        return;
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>ok since method is not void</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    int bar() {
        return 2;
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>ok since return is in sub block</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    void bar() {
        if (false) return;
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>interface methods don't have return statements</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public interface Foo {
    void bar();
}
        ]]></code>
    </test-code>

    <test-code>
        <description>abstract methods don't have return statements</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    abstract void bar();
}
        ]]></code>
    </test-code>

    <test-code>
        <description>return inside a catch - ok</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    void bar() {
        try {
        } catch(Exception e){
            return;
        }
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>nested classes</description>
        <expected-problems>4</expected-problems>
        <expected-linenumbers>6,12,19,26</expected-linenumbers>
        <code><![CDATA[
public class Foo {
    void myMethod() {
        Object anonymous = new Object() {
            public void bar1() {
                int y = 1;
                return;
            }
        };
        class Local {
            public void bar2() {
                int y = 2;
                return;
            }
        }
    }
    class Inner {
        void bar3() {
            int y = 3;
            return;
        }
    }
}
interface MyInterface {
    default void myDefaultMethod() {
        int y = 4;
        return;
    }
}
        ]]></code>
    </test-code>
</test-data>
